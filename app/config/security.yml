jms_security_extra:
    secure_all_services: false
    expressions: true

security:
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    role_hierarchy:
        ROLE_SUPER_ADMIN: [ROLE_EDIT_USERS, ROLE_EDIT_DEVISES, ROLE_EDIT_IMPOTS, ROLE_EDIT_CLIENTS, ROLE_EDIT_CLIENTOPERATIONS]
        ROLE_DASHBOARD_ADMIN: [ROLE_USER, ROLE_SONATA_ADMIN]
        ROLE_EDIT_USERS: [ROLE_DASHBOARD_ADMIN, ROLE_USER, ROLE_SONATA_ADMIN]
        ROLE_EDIT_DEVISES: [ROLE_DASHBOARD_ADMIN, ROLE_USER, ROLE_SONATA_ADMIN]
        ROLE_EDIT_IMPOTS: [ROLE_DASHBOARD_ADMIN, ROLE_USER, ROLE_SONATA_ADMIN]
        ROLE_DASHBOARD_CLIENT: [ROLE_USER, ROLE_SONATA_ADMIN]
        ROLE_EDIT_CLIENTS: [ROLE_DASHBOARD_CLIENT, ROLE_USER, ROLE_SONATA_ADMIN]
        ROLE_EDIT_CLIENTOPERATIONS: [ROLE_USER, ROLE_SONATA_ADMIN]
        ROLE_CLIENT_TOOLS: [ROLE_EDIT_CLIENTOPERATIONS]
        SONATA:
            - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT  # if you are not using acl then this line must be uncommented

    providers:
        fos_userbundle:
            id: fos_user.user_manager

    firewalls:
        main:
            pattern:      .*
            form_login:
                provider:       fos_userbundle
                login_path:     /login
                use_forward:    false
                check_path:     /login_check
                failure_path:   null
            logout:
                path:           /logout
            anonymous:    true

        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

    access_control:
        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/_wdt, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/_profiler, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/_configurator, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/core, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/sonata/cache, role: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # -> custom access control for the admin area of the URL
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login-check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        # -> end

        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # -> user access
        - { path: ^/profile, role: [ROLE_USER] }
        - { path: ^/change-password, role: [ROLE_USER] }
        # -> end

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs

        - { path: ^/dashboard$, role: [ROLE_SUPER_ADMIN] }

        - { path: ^/dashboard/admin, role: [ROLE_DASHBOARD_ADMIN] }
        - { path: ^/sonata/user, role: [ROLE_EDIT_USERS] }
        - { path: ^/sonata/devises, role: [ROLE_EDIT_DEVISES] }
        - { path: ^/sonata/impots, role: [ROLE_EDIT_IMPOTS] }

        - { path: ^/dashboard/client, role: [ROLE_DASHBOARD_CLIENT] }
        - { path: ^/sonata/client, role: [ROLE_EDIT_CLIENTS] }

        - { path: ^/sonata/clientoperations, role: [ROLE_EDIT_CLIENTOPERATIONS] }

        - { path: ^/.*, role: [ROLE_SONATA_ADMIN] }